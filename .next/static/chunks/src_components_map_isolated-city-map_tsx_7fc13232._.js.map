{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/pc/Desktop/new/src/components/map/isolated-city-map.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport type { City } from '@/lib/types';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\r\nimport { LandUseIcon } from '../icons';\r\n\r\n// Helper to get marker color based on z_metric\r\nconst getMarkerColor = (z_metric: number) => {\r\n  const hue = (1 - z_metric) * 120; // 0 -> 120 (green), 1 -> 0 (red)\r\n  return `hsl(${hue}, 90%, 45%)`;\r\n};\r\n\r\nconst createCustomIcon = (city: City) => {\r\n  const markerHtml = `\r\n    <div style=\"\r\n      background-color: ${getMarkerColor(city.z_metric)};\r\n      width: 24px;\r\n      height: 24px;\r\n      border-radius: 50%;\r\n      border: 2px solid white;\r\n      box-shadow: 0 0 5px rgba(0,0,0,0.5);\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      color: white;\r\n      font-size: 12px;\r\n      font-weight: bold;\r\n    \">\r\n    </div>`;\r\n\r\n  return L.divIcon({\r\n    html: markerHtml,\r\n    className: 'custom-leaflet-icon',\r\n    iconSize: [24, 24],\r\n    iconAnchor: [12, 24],\r\n    popupAnchor: [0, -24],\r\n  });\r\n};\r\n\r\ninterface CityMapProps {\r\n  cities: City[];\r\n  selectedCity: City | null;\r\n  onSelectCity: (city: City | null) => void;\r\n}\r\n\r\nconst IsolatedCityMap: React.FC<CityMapProps> = ({ cities, selectedCity, onSelectCity }) => {\r\n  const mapRef = useRef<L.Map | null>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [isMounted, setIsMounted] = useState(false);\r\n  const [mapInstance, setMapInstance] = useState<L.Map | null>(null);\r\n\r\n  // Mount component only on client side\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n  }, []);\r\n\r\n  // Clean up function\r\n  const cleanup = useCallback(() => {\r\n    if (mapRef.current) {\r\n      try {\r\n        mapRef.current.remove();\r\n      } catch (e) {\r\n        // Ignore cleanup errors\r\n      }\r\n      mapRef.current = null;\r\n    }\r\n    setMapInstance(null);\r\n  }, []);\r\n\r\n  // Clean up on unmount\r\n  useEffect(() => {\r\n    return cleanup;\r\n  }, [cleanup]);\r\n\r\n  // Handle map creation\r\n  const handleMapCreated = useCallback((map: L.Map) => {\r\n    mapRef.current = map;\r\n    setMapInstance(map);\r\n  }, []);\r\n\r\n  // Handle city selection\r\n  useEffect(() => {\r\n    if (mapInstance && selectedCity) {\r\n      mapInstance.flyTo([selectedCity.latitude, selectedCity.longitude], 6);\r\n    }\r\n  }, [mapInstance, selectedCity]);\r\n\r\n  if (!isMounted) {\r\n    return <div className=\"h-full w-full bg-gray-100 animate-pulse\" />;\r\n  }\r\n\r\n  return (\r\n    <div ref={containerRef} className=\"h-full w-full\">\r\n      <MapContainer\r\n        center={[20, 0]}\r\n        zoom={2.5}\r\n        style={{ height: '100%', width: '100%' }}\r\n        worldCopyJump={true}\r\n        ref={handleMapCreated}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {cities.map(city => (\r\n          <Marker\r\n            key={city.id}\r\n            position={[city.latitude, city.longitude]}\r\n            icon={createCustomIcon(city)}\r\n            eventHandlers={{\r\n              click: () => {\r\n                onSelectCity(city);\r\n              },\r\n            }}\r\n          />\r\n        ))}\r\n        {selectedCity && mapInstance && (\r\n          <Popup\r\n            position={[selectedCity.latitude, selectedCity.longitude]}\r\n          >\r\n            <Card className=\"min-w-64 border-none shadow-none\">\r\n              <CardHeader className=\"p-2\">\r\n                <CardTitle className=\"flex items-center gap-2 text-lg\">\r\n                  <LandUseIcon landType={selectedCity.land_type} className=\"w-5 h-5\"/>\r\n                  {selectedCity.name}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"p-2 pt-0 text-sm\">\r\n                <p><strong>Population:</strong> {selectedCity.population.toLocaleString()}</p>\r\n                <p><strong>Built-up Area:</strong> {(selectedCity.built_up_area_m2 / 1_000_000).toFixed(2)} kmÂ²</p>\r\n                <p><strong>Z-Metric:</strong> {selectedCity.z_metric.toFixed(2)}</p>\r\n                <p><strong>Land Use:</strong> {selectedCity.land_type}</p>\r\n              </CardContent>\r\n            </Card>\r\n          </Popup>\r\n        )}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IsolatedCityMap;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}