{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/pc/Desktop/new/src/components/map/city-map.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport type { City } from '@/lib/types';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\nimport { LandUseIcon } from '../icons';\n// Note: Leaflet CSS is loaded globally in `src/app/layout.tsx` via a <link> tag.\n// Avoid importing the CSS here to prevent duplicate side-effects.\n\n// Helper to get marker color based on z_metric\nconst getMarkerColor = (z_metric: number) => {\n  const hue = (1 - z_metric) * 120; // 0 -> 120 (green), 1 -> 0 (red)\n  return `hsl(${hue}, 90%, 45%)`;\n};\n\nconst createCustomIcon = (city: City) => {\n  const markerHtml = `\n    <div style=\"\n      background-color: ${getMarkerColor(city.z_metric)};\n      width: 24px;\n      height: 24px;\n      border-radius: 50%;\n      border: 2px solid white;\n      box-shadow: 0 0 5px rgba(0,0,0,0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      color: white;\n      font-size: 12px;\n      font-weight: bold;\n    \">\n    </div>`;\n\n  return L.divIcon({\n    html: markerHtml,\n    className: 'custom-leaflet-icon',\n    iconSize: [24, 24],\n    iconAnchor: [12, 24],\n    popupAnchor: [0, -24],\n  });\n};\n\ninterface CityMapProps {\n  cities: City[];\n  selectedCity: City | null;\n  onSelectCity: (city: City | null) => void;\n}\n\n// Create a unique map wrapper component to prevent initialization conflicts\nconst MapWrapper: React.FC<CityMapProps> = ({ cities, selectedCity, onSelectCity }) => {\n  const mapRef = React.useRef<L.Map | null>(null);\n  const [isMapReady, setIsMapReady] = React.useState(false);\n  const [mapKey, setMapKey] = React.useState(() => `map-${Date.now()}-${Math.random().toString(36).slice(2)}`);\n\n  // Force remount if there are issues\n  const forceRemount = React.useCallback(() => {\n    setMapKey(`map-${Date.now()}-${Math.random().toString(36).slice(2)}`);\n    setIsMapReady(false);\n  }, []);\n\n  // Clean up map on unmount\n  React.useEffect(() => {\n    return () => {\n      if (mapRef.current) {\n        try {\n          mapRef.current.remove();\n        } catch (e) {\n          // Ignore cleanup errors\n        }\n        mapRef.current = null;\n      }\n    };\n  }, []);\n\n  const handleMapReady = () => {\n    setIsMapReady(true);\n  };\n\n  const handleMapCreated = (map: L.Map) => {\n    mapRef.current = map;\n  };\n\n  // Handle city selection and map navigation\n  React.useEffect(() => {\n    if (mapRef.current && selectedCity && isMapReady) {\n      mapRef.current.flyTo([selectedCity.latitude, selectedCity.longitude], 6);\n    }\n  }, [selectedCity, isMapReady]);\n\n  return (\n    <div className=\"h-full w-full\">\n      <MapContainer\n        key={mapKey}\n        center={[20, 0]}\n        zoom={2.5}\n        style={{ height: '100%', width: '100%' }}\n        worldCopyJump={true}\n        whenReady={handleMapReady}\n        ref={handleMapCreated}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {cities.map(city => (\n          <Marker\n            key={city.id}\n            position={[city.latitude, city.longitude]}\n            icon={createCustomIcon(city)}\n            eventHandlers={{\n              click: () => {\n                onSelectCity(city);\n              },\n            }}\n          />\n        ))}\n        {selectedCity && isMapReady && (\n          <Popup\n            position={[selectedCity.latitude, selectedCity.longitude]}\n          >\n            <Card className=\"min-w-64 border-none shadow-none\">\n              <CardHeader className=\"p-2\">\n                <CardTitle className=\"flex items-center gap-2 text-lg\">\n                  <LandUseIcon landType={selectedCity.land_type} className=\"w-5 h-5\"/>\n                  {selectedCity.name}\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-2 pt-0 text-sm\">\n                <p><strong>Population:</strong> {selectedCity.population.toLocaleString()}</p>\n                <p><strong>Built-up Area:</strong> {(selectedCity.built_up_area_m2 / 1_000_000).toFixed(2)} kmÂ²</p>\n                <p><strong>Z-Metric:</strong> {selectedCity.z_metric.toFixed(2)}</p>\n                <p><strong>Land Use:</strong> {selectedCity.land_type}</p>\n              </CardContent>\n            </Card>\n          </Popup>\n        )}\n      </MapContainer>\n    </div>\n  );\n};\n\nconst CityMap: React.FC<CityMapProps> = (props) => {\n  const [mounted, setMounted] = React.useState(false);\n\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) {\n    return <div className=\"h-full w-full bg-gray-100 animate-pulse\" />;\n  }\n\n  return <MapWrapper {...props} />;\n};\n\nexport default CityMap;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;;AAPA;;;;;;AAQA,iFAAiF;AACjF,kEAAkE;AAElE,+CAA+C;AAC/C,MAAM,iBAAiB,CAAC;IACtB,MAAM,MAAM,CAAC,IAAI,QAAQ,IAAI,KAAK,iCAAiC;IACnE,OAAO,CAAC,IAAI,EAAE,IAAI,WAAW,CAAC;AAChC;AAEA,MAAM,mBAAmB,CAAC;IACxB,MAAM,aAAa,CAAC;;wBAEE,EAAE,eAAe,KAAK,QAAQ,EAAE;;;;;;;;;;;;;UAa9C,CAAC;IAET,OAAO,oJAAA,CAAA,UAAC,CAAC,OAAO,CAAC;QACf,MAAM;QACN,WAAW;QACX,UAAU;YAAC;YAAI;SAAG;QAClB,YAAY;YAAC;YAAI;SAAG;QACpB,aAAa;YAAC;YAAG,CAAC;SAAG;IACvB;AACF;AAQA,4EAA4E;AAC5E,MAAM,aAAqC,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE;;IAChF,MAAM,SAAS,6JAAA,CAAA,UAAK,CAAC,MAAM,CAAe;IAC1C,MAAM,CAAC,YAAY,cAAc,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IACnD,MAAM,CAAC,QAAQ,UAAU,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ;+BAAC,IAAM,CAAC,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC,IAAI;;IAE3G,oCAAoC;IACpC,MAAM,eAAe,6JAAA,CAAA,UAAK,CAAC,WAAW;gDAAC;YACrC,UAAU,CAAC,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC,IAAI;YACpE,cAAc;QAChB;+CAAG,EAAE;IAEL,0BAA0B;IAC1B,6JAAA,CAAA,UAAK,CAAC,SAAS;gCAAC;YACd;wCAAO;oBACL,IAAI,OAAO,OAAO,EAAE;wBAClB,IAAI;4BACF,OAAO,OAAO,CAAC,MAAM;wBACvB,EAAE,OAAO,GAAG;wBACV,wBAAwB;wBAC1B;wBACA,OAAO,OAAO,GAAG;oBACnB;gBACF;;QACF;+BAAG,EAAE;IAEL,MAAM,iBAAiB;QACrB,cAAc;IAChB;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAO,OAAO,GAAG;IACnB;IAEA,2CAA2C;IAC3C,6JAAA,CAAA,UAAK,CAAC,SAAS;gCAAC;YACd,IAAI,OAAO,OAAO,IAAI,gBAAgB,YAAY;gBAChD,OAAO,OAAO,CAAC,KAAK,CAAC;oBAAC,aAAa,QAAQ;oBAAE,aAAa,SAAS;iBAAC,EAAE;YACxE;QACF;+BAAG;QAAC;QAAc;KAAW;IAE7B,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,0JAAA,CAAA,eAAY;YAEX,QAAQ;gBAAC;gBAAI;aAAE;YACf,MAAM;YACN,OAAO;gBAAE,QAAQ;gBAAQ,OAAO;YAAO;YACvC,eAAe;YACf,WAAW;YACX,KAAK;;8BAEL,6LAAC,uJAAA,CAAA,YAAS;oBACR,aAAY;oBACZ,KAAI;;;;;;gBAEL,OAAO,GAAG,CAAC,CAAA,qBACV,6LAAC,oJAAA,CAAA,SAAM;wBAEL,UAAU;4BAAC,KAAK,QAAQ;4BAAE,KAAK,SAAS;yBAAC;wBACzC,MAAM,iBAAiB;wBACvB,eAAe;4BACb,OAAO;gCACL,aAAa;4BACf;wBACF;uBAPK,KAAK,EAAE;;;;;gBAUf,gBAAgB,4BACf,6LAAC,mJAAA,CAAA,QAAK;oBACJ,UAAU;wBAAC,aAAa,QAAQ;wBAAE,aAAa,SAAS;qBAAC;8BAEzD,cAAA,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oCAAC,WAAU;;sDACnB,6LAAC,8HAAA,CAAA,cAAW;4CAAC,UAAU,aAAa,SAAS;4CAAE,WAAU;;;;;;wCACxD,aAAa,IAAI;;;;;;;;;;;;0CAGtB,6LAAC,mIAAA,CAAA,cAAW;gCAAC,WAAU;;kDACrB,6LAAC;;0DAAE,6LAAC;0DAAO;;;;;;4CAAoB;4CAAE,aAAa,UAAU,CAAC,cAAc;;;;;;;kDACvE,6LAAC;;0DAAE,6LAAC;0DAAO;;;;;;4CAAuB;4CAAE,CAAC,aAAa,gBAAgB,GAAG,SAAS,EAAE,OAAO,CAAC;4CAAG;;;;;;;kDAC3F,6LAAC;;0DAAE,6LAAC;0DAAO;;;;;;4CAAkB;4CAAE,aAAa,QAAQ,CAAC,OAAO,CAAC;;;;;;;kDAC7D,6LAAC;;0DAAE,6LAAC;0DAAO;;;;;;4CAAkB;4CAAE,aAAa,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;WAvCxD;;;;;;;;;;AA+Cb;GA1FM;KAAA;AA4FN,MAAM,UAAkC,CAAC;;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAE7C,6JAAA,CAAA,UAAK,CAAC,SAAS;6BAAC;YACd,WAAW;QACb;4BAAG,EAAE;IAEL,IAAI,CAAC,SAAS;QACZ,qBAAO,6LAAC;YAAI,WAAU;;;;;;IACxB;IAEA,qBAAO,6LAAC;QAAY,GAAG,KAAK;;;;;;AAC9B;IAZM;MAAA;uCAcS","debugId":null}}]
}